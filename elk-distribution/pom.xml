<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>elk-parent</artifactId>
		<groupId>org.semanticweb.elk</groupId>
		<version>0.5.0-SNAPSHOT</version>
	</parent>

	<artifactId>elk-distribution</artifactId>
	<packaging>jar</packaging>

	<name>ELK Distribution</name>
	<description>The module for packaging of ELK products and their distribution</description>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-standalone</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-protege</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owlapi-standalone</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
			<classifier>bin</classifier>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owlapi-standalone</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
			<classifier>src</classifier>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owlapi-standalone</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
			<classifier>lib</classifier>
			<exclusions>
				<exclusion>
					<groupId>${project.groupId}</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.owlapi</groupId>
			<artifactId>owlapi-distribution</artifactId>
			<version>${owlapi.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-testing</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<properties>
		<elk-standalone.base>elk-standalone</elk-standalone.base>
		<elk-protege.base>elk-protege-${project.version}</elk-protege.base>
		<elk-owlapi.base>elk-owlapi-${project.version}</elk-owlapi.base>
		<elk-standalone.assembly-id>standalone-executable</elk-standalone.assembly-id>
		<elk-owlapi.assembly-id>owlapi-library</elk-owlapi.assembly-id>
		<elk-protege.assembly-id>protege-plugin</elk-protege.assembly-id>
		<elk-standalone.file>
			${project.artifactId}-${project.version}-${elk-standalone.assembly-id}
		</elk-standalone.file>
		<elk-owlapi.file>
			${project.artifactId}-${project.version}-${elk-owlapi.assembly-id}
		</elk-owlapi.file>
		<elk-protege.file>
			${project.artifactId}-${project.version}-${elk-protege.assembly-id}
		</elk-protege.file>
		<!-- the next release version used in changes.xml -->
		<release.version>
			${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}
		</release.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<!-- the plugin used to generate the modified plugin versions, such as 
					release.version used templates/*.vm and parsedVersion.osgiVersion used in 
					src/main/update.properties -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.11</version>
				<executions>
					<execution>
						<!-- generate the modified plugin versions, such as release.version 
							used templates/*.vm and parsedVersion.osgiVersion used in src/main/update.properties -->
						<id>set-osgi-versions</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
						<phase>package</phase>
					</execution>
					<execution>
						<!-- set the current year from the build timestamp, used in README.txt -->
						<id>set-current-year</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<name>currentYear</name>
							<pattern>yyyy</pattern>
						</configuration>
					</execution>
					<execution>
						<!-- set the build date, used in changes.xml -->
						<id>set-build-date</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<name>buildDate</name>
							<pattern>yyyy-MM-dd</pattern>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- the plugin to filter files by expanding the defined properties with 
					their values; the expanded versions are copied to the target -->
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>filter-changes-xml</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<!-- filtering of the changes.xml file -->
									<directory>${basedir}/src/changes</directory>
									<filtering>true</filtering>
									<includes>
										<include>changes.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-update-properties-to-site</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/site/resources</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/protege/</directory>
									<filtering>true</filtering>
									<includes>
										<include>p5.update.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- the plugin to generate changelog and release announcements -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<configuration>
					<!-- the changes filtered source changes file -->
					<xmlPath>${basedir}/target/changes.xml</xmlPath>
					<templateDirectory>templates</templateDirectory>
					<announcementDirectory>${project.build.directory}</announcementDirectory>
					<developmentTeam>${project.parent.name} team</developmentTeam>
				</configuration>
				<executions>
					<execution>
						<!-- checking if the changes file is well-formed -->
						<id>check-changes</id>
						<phase>verify</phase>
						<goals>
							<goal>changes-check</goal>
						</goals>
					</execution>
					<execution>
						<!-- generating of the Changes.txt file -->
						<id>generate-changes-file</id>
						<phase>package</phase>
						<goals>
							<goal>announcement-generate</goal>
						</goals>
						<configuration>
							<announcementFile>Changes.txt</announcementFile>
							<template>changes.vm</template>
						</configuration>
					</execution>
					<execution>
						<!-- generation of the version-info.txt file for Protege auto-update 
							feature -->
						<id>generate-protege-version-info</id>
						<phase>package</phase>
						<goals>
							<goal>announcement-generate</goal>
						</goals>
						<configuration>
							<announcementFile>p5.version-info.txt</announcementFile>
							<template>version-info.vm</template>
							<announcementDirectory>${project.build.directory}/site/resources</announcementDirectory>
						</configuration>
					</execution>
					<execution>
						<!-- generation of the e-mail announcement message announcement.txt -->
						<id>generate-email-announcement</id>
						<phase>package</phase>
						<goals>
							<goal>announcement-generate</goal>
						</goals>
						<configuration>
							<announcementFile>announcement.txt</announcementFile>
							<template>announcement.vm</template>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- the plugin for assembling of the distribution zip files; we will 
					run some test on them, therefore we create them at the generate-test-resources 
					phase -->
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<!-- creating the distribution archive for elk-standalone -->
						<id>create-standalone-zip</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>true</appendAssemblyId>
							<descriptors>
								<descriptor>${basedir}/src/assembly/standalone-zip.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<!-- creating the distribution archive for elk-protege -->
						<id>create-protege-zip</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>true</appendAssemblyId>
							<descriptors>
								<!-- configuration file describing how to create the archive -->
								<descriptor>${basedir}/src/assembly/protege-zip.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<!-- creating the distribution archive for elk-owlapi-standalone -->
						<id>create-owlapi-zip</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>true</appendAssemblyId>
							<descriptors>
								<!-- configuration file describing how to create the archive -->
								<descriptor>${basedir}/src/assembly/owlapi-zip.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<!-- the plugin to generate changes log and release announcements -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<!-- the changes filtered source changes file -->
					<xmlPath>${basedir}/target/changes.xml</xmlPath>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
